import { AlertTriangle, Clock, TrendingDown, Users, ArrowUp, ArrowDown } from "lucide-react";

const Challenges = () => {
  const scrollToSection = (id: string) => {
    document.getElementById(id)?.scrollIntoView({ behavior: 'smooth' });
  };
  const challenges = [
    {
      icon: TrendingDown,
      title: "H·ªçc sinh 'b·ªôi th·ª±c' th√¥ng tin",
      description: "Nhi·ªÅu tr∆∞·ªùng t∆∞ v·∫•n c√πng l√∫c khi·∫øn h·ªçc sinh kh√≥ ti·∫øp nh·∫≠n",
      impact: "Gi·∫£m t·ª∑ l·ªá ghi nh·ªõ v√† quan t√¢m"
    },
    {
      icon: Users,
      title: "H·ª©ng th√∫ gi·∫£m s√∫t",
      description: "M·∫°ng x√£ h·ªôi v√† t∆∞ v·∫•n tr√πng l·∫∑p l√†m h·ªçc sinh m·∫•t h·ª©ng",
      impact: "Kh√≥ t·∫°o s·ª± kh√°c bi·ªát"
    },
    {
      icon: Clock,
      title: "Gi·ªõi h·∫°n th·ªùi gian",
      description: "H·ªçc sinh b·∫≠n h·ªçc t·∫≠p, √¥n thi v√† c√°c ho·∫°t ƒë·ªông kh√°c",
      impact: "Kh√≥ ti·∫øp c·∫≠n v√† t∆∞∆°ng t√°c"
    },
    {
      icon: AlertTriangle,
      title: "∆Øu ti√™n ƒë·∫°i h·ªçc c√¥ng l·∫≠p",
      description: "Nhi·ªÅu h·ªçc sinh v·∫´n ∆∞u ti√™n c√°c tr∆∞·ªùng c√¥ng l·∫≠p tr∆∞·ªõc",
      impact: "C·∫ßn th·ªùi gian thuy·∫øt ph·ª•c l√¢u h∆°n"
    }
  ];

  return (
    <section id="challenges" className="relative py-20 px-6 bg-muted/30">
      <div className="max-w-6xl mx-auto">
        <div className="text-center mb-16 animate-fade-in">
          <div className="inline-flex items-center gap-2 bg-destructive/10 px-6 py-3 rounded-full mb-6">
            <AlertTriangle className="w-5 h-5 text-destructive" />
            <span className="text-destructive font-semibold">Th·ª±c t·∫ø & Kh√≥ khƒÉn</span>
          </div>
          <h2 className="text-4xl md:text-5xl font-bold text-foreground mb-6">
            Nh·ªØng th√°ch th·ª©c
            <br />
            <span className="text-primary">trong tuy·ªÉn sinh</span>
          </h2>
          <p className="text-xl text-muted-foreground max-w-3xl mx-auto">
            Hi·ªÉu r√µ kh√≥ khƒÉn ƒë·ªÉ t√¨m ra gi·∫£i ph√°p ph√π h·ª£p
          </p>
        </div>

        <div className="grid md:grid-cols-2 gap-6 mb-12">
          {challenges.map((challenge, index) => (
            <div
              key={index}
              className="bg-white rounded-2xl shadow-soft p-8 hover:shadow-medium hover-scale transition-smooth animate-fade-in"
              style={{ animationDelay: `${index * 0.15}s` }}
            >
              <div className="flex items-start gap-6">
                <div className="flex-shrink-0">
                  <div className="w-14 h-14 rounded-xl bg-destructive/10 flex items-center justify-center">
                    <challenge.icon className="w-7 h-7 text-destructive" />
                  </div>
                </div>
                <div className="flex-1">
                  <h3 className="text-xl font-bold text-foreground mb-3">
                    {challenge.title}
                  </h3>
                  <p className="text-muted-foreground mb-4 leading-relaxed">
                    {challenge.description}
                  </p>
                  <div className="flex items-center gap-2 bg-destructive/5 px-4 py-2 rounded-lg">
                    <AlertTriangle className="w-4 h-4 text-destructive flex-shrink-0" />
                    <p className="text-sm font-medium text-destructive">
                      {challenge.impact}
                    </p>
                  </div>
                </div>
              </div>
            </div>
          ))}
        </div>

        {/* Solution approach */}
        <div className="relative overflow-hidden rounded-3xl shadow-medium animate-fade-in">
          <div className="absolute inset-0 gradient-hero opacity-95"></div>
          <div className="relative p-8 md:p-12">
            <div className="max-w-3xl mx-auto text-center">
              <div className="text-5xl mb-6">üí™</div>
              <h3 className="text-3xl font-bold text-white mb-6">
                V·∫≠y n√™n l√†m g√¨?
              </h3>
              <div className="space-y-4 text-lg text-white/95 leading-relaxed">
                <p>
                  ‚ú¶ T·∫°o <span className="font-bold text-secondary">s·ª± kh√°c bi·ªát</span> trong c√°ch ti·∫øp c·∫≠n
                </p>
                <p>
                  ‚ú¶ X√¢y d·ª±ng <span className="font-bold text-secondary">m·ªëi quan h·ªá ch√¢n th√†nh</span>, kh√¥ng ch·ªâ t∆∞ v·∫•n
                </p>
                <p>
                  ‚ú¶ <span className="font-bold text-secondary">Ki√™n tr√¨</span> v√† bi·∫øt th·ªùi ƒëi·ªÉm ph√π h·ª£p
                </p>
                <p>
                  ‚ú¶ T·∫≠n d·ª•ng <span className="font-bold text-secondary">c√¥ng ngh·ªá</span> ƒë·ªÉ qu·∫£n l√Ω v√† theo d√µi hi·ªáu qu·∫£
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* Navigation arrows */}
      <div className="absolute top-1/2 -translate-y-1/2 right-8 flex flex-col gap-2">
        <button
          onClick={() => scrollToSection('phase-one')}
          className="group p-3 bg-white shadow-medium rounded-full hover:bg-primary transition-smooth"
          aria-label="Scroll to previous section"
        >
          <ArrowUp className="w-5 h-5 text-primary group-hover:text-white transition-smooth" />
        </button>
        <button
          onClick={() => scrollToSection('data-processing')}
          className="group p-3 bg-white shadow-medium rounded-full hover:bg-primary transition-smooth"
          aria-label="Scroll to next section"
        >
          <ArrowDown className="w-5 h-5 text-primary group-hover:text-white transition-smooth" />
        </button>
      </div>
    </section>
  );
};

export default Challenges;
